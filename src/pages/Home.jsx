import qs from 'qs';
import React, { useCallback } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Link, useNavigate } from 'react-router-dom';

import Categories from '../components/Categories';
import Pagination from '../components/Pagination/index';
import PizzaBlock from '../components/PizzaBlock';
import { Skeleton } from '../components/PizzaBlock/Skeleton';
import Sort from '../components/Sort';
import { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';
import { fetchPizzas, selectPizzaData } from '../redux/slices/pizzaSlice';

const Home = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { items, status } = useSelector(selectPizzaData);
  const categoryId = useSelector(state => state.filter.categoryId);
  const sort = useSelector(state => state.filter.sort.sortProperty);
  const currentPage = useSelector(state => state.filter.currentPage);
  const searchValue = useSelector(state => state.filter.searchValue);

  const onChangeCategory = id => {
    dispatch(setCategoryId(id));
  }; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

  const onChangePage = number => {
    dispatch(setCurrentPage(number));
  }; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

  // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ url
  React.useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1)); // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
      dispatch(
        setFilters({
          ...params, // –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–¥–∞–µ–º –≤ Redux
          currentPage: Number(params.currentPage), // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        }),
      );
    }
  }, [dispatch]); // –ü–µ—Ä–µ–¥–∞–µ–º dispatch –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è dispatch –∏–∑ Redux –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ

  const getPizzas = useCallback(async () => {
    const category = categoryId > 0 ? `&category=${categoryId}` : '';
    const sortBy = sort.replace('-', ''); // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–ª—é –±–µ–∑ –∑–Ω–∞–∫–∞ "-"
    const order = sort.includes('-') ? 'asc' : 'desc';
    const search = searchValue ? `&search=${searchValue}` : '';

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ Redux
    dispatch(
      fetchPizzas({
        category,
        sortBy,
        order,
        search,
        currentPage,
      }),
    );
    window.scrollTo(0, 0);
  }, [categoryId, currentPage, dispatch, searchValue, sort]); // –ü–µ—Ä–µ–¥–∞–µ–º dispatch –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è dispatch –∏–∑ Redux

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  React.useEffect(() => {
    getPizzas();
  }, [getPizzas]);

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  React.useEffect(() => {
    const queryString = qs.stringify({
      sort,
      categoryId,
      currentPage,
    });
    navigate(`?${queryString}`);
  }, [categoryId, sort, currentPage, navigate]);

  const categoryNames = ['–í—Å–µ –ø–∏—Ü—Ü—ã', '–ú—è—Å–Ω—ã–µ', '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–µ', '–ì—Ä–∏–ª—å', '–û—Å—Ç—Ä—ã–µ', '–ó–∞–∫—Ä—ã—Ç—ã–µ'];
  const pizzas = items.map(obj => (
    <Link key={obj.id} to={`/pizza/${obj.id}`}>
      <PizzaBlock {...obj} image={obj.imageUrl} />
    </Link>
  ));
  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onChangeCategory={onChangeCategory} />
        <Sort />
      </div>
      <h2 className="content__title">{categoryNames[categoryId]}</h2>
      {status === 'error' ? (
        <div className="content__error-info">
          <h2>
            –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞<span>üòï</span>
          </h2>
          <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ü—Ü—ã. –ü–æ–ø—Ä–æ–±—É–∏ÃÜ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.</p>
        </div>
      ) : (
        <div className="content__items">{status === 'loading' ? skeletons : pizzas}</div>
      )}
      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};

export default Home;
